{"version":3,"sources":["logo.svg","Components/HadesCounter.js","Components/CardList.js","Components/Checkbox.js","Components/PlayerSelector.js","Components/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HadesCounter","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","refThreatSize","element","props","getThreatWidth","width","getBoundingClientRect","height","refNumberWdithSize","getNumberWidth","inherits","createClass","key","value","_this2","react_default","a","createElement","className","ref","dice1","dice2","web","div","style","hadesCounter","map","no","img","draggable","src","process","hades","React","Component","tileSpacing","fn","order","tiles","lastPlayerIndex","heightCalculated","down","originalIndex","curIndex","y","index","result","randomZ","Math","floor","random","tile","imageUrl","name","shuffling","scale","zIndex","shadow","immediate","n","indexOf","objectSpread","opacity","z","fn2","favorTiles","used","x","CardList","ordering","_useState","useState","_useState2","slicedToArray","threatSize","setThreatSize","_useState3","_useState4","threatNumberWidth","setThreatNumberWidth","_useState5","_useState6","rollDisabled","setRollDisabled","_useState7","_useState8","round","setRound","_useState9","_useState10","setHeightCalculated","_useSpring","useSpring","transform","_useSpring2","setHades","_useSpring3","_useSpring4","setHadesCounter","_useSprings","useSprings","_useSprings2","tileSprings","setSprings","_useSprings3","_useSprings4","favorSprings","setFavors","getTileHeight","min","bind","useGesture","_ref","delta","curRow","clamp","newOrder","swap","playerCount","setOrdering","addToHistory","cycle","cycleCount","wasShuffled","cycleFavors","lastUnusedIndex","findLastIndex","searchFavorTile","updatedTiles","favorTile","assign","setFavorTiles","hadesActive","shuffedFavorTiles","shuffle","defaultFavorTiles","resetFavors","normalShuffle","shuffleLastFirst","lastRollOrder","lastGod","last","slice","unshift","animateTiles","useCallback","forEach","isHades","hadesRoll","rollForHades","setTimeout","resetHades","setHadesActive","rollHades","useEffect","onClick","back","incrementCycle","isFavors","lastRoll","shuffleHistory","isTitans","lastTwoGods","firstTwoGods","lastTwoTitansGods","firstThreeGods","lastThreeGodsShuffled","TwoFromThree","firstTwoGodsFromLastRoll","missedOutGod","HadesCounter_HadesCounter","size","_ref2","i","backgroundColor","boxShadow","interpolate","s","Checkbox","label","type","checked","onChange","PlayerSelector","players","setPlayerCount","initialGodOrdering","initialTitansOrdering","diceValues","defaultGodTiles","defaultTitansTiles","AppContainer","incrementCycleCount","setState","state","tilesToUse","addToShuffleHistory","newValue","newHistory","toConsumableArray","hadesTotal","diceMax","total","setIsFavors","setIsHecate","isHecate","setIsHades","setIsTitans","start","screenMode","options","onChangeHades","e","target","onChangeFavors","onChangeHecate","onChangeTitans","renderApp","CardList_CardList","PlayerSelector_PlayerSelector","Checkbox_Checkbox","isOptions","picture","Image","App","AppContainer_AppContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac0524a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport { animated } from \"react-spring\";\n\nexport class HadesCounter extends React.Component {\n  refThreatSize = element => {\n    if (element) {\n      this.props.getThreatWidth({width: element.getBoundingClientRect().width, height: element.getBoundingClientRect().height});\n    }\n  };\n\n  refNumberWdithSize = element => {\n    if (element) {\n      this.props.getNumberWidth(element.getBoundingClientRect().width);\n    }\n  };\n\n  render() {\n    return (\n      <div className={\"hadesContainer\"} ref={this.refThreatSize}>\n      <div className=\"dice-container\">\n        <div className=\"dice-face\">{this.props.dice1}</div>\n        <div className=\"dice-face\">{this.props.dice2}</div>\n      </div>\n        <div className=\"hadesCounterContainer\">\n          <animated.div\n            className={\"hadesCounter\"}\n            style={this.props.hadesCounter}\n          />\n          <ul className=\"numbers\">\n            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(no => (\n              <li ref={this.refNumberWdithSize}>{no}</li>\n            ))}\n          </ul>\n        </div>\n        <animated.img\n          className={\"hades\"}\n          draggable=\"false\"\n          src={process.env.PUBLIC_URL + \"/hades.jpg\"}\n          style={this.props.hades}\n        />\n      </div>\n    );\n  }\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useGesture } from \"react-use-gesture\";\r\nimport { HadesCounter } from \"./HadesCounter\";\r\nimport clamp from \"lodash.clamp\";\r\nimport shuffle from \"lodash.shuffle\";\r\nimport slice from \"lodash.slice\";\r\nimport last from \"lodash.last\";\r\nimport swap from \"lodash-move\";\r\nimport { useSpring, useSprings, animated, interpolate } from \"react-spring\";\r\nimport findLastIndex from \"lodash.findlastindex\";\r\n\r\nlet tileSpacing = 0;\r\nconst ratio = 3.8744588744588744588744588744589;\r\n\r\nconst fn = (\r\n  order,\r\n  tiles,\r\n  lastPlayerIndex,\r\n  heightCalculated,\r\n  down,\r\n  originalIndex,\r\n  curIndex,\r\n  y\r\n) => index => {\r\n  var result = {};\r\n  var randomZ = Math.floor(Math.random() * 11) - 5;\r\n  const tile = tiles[index];\r\n  const imageUrl = process.env.PUBLIC_URL + \"/\" + tile.name + \".png\";\r\n  const blankImageUrl = process.env.PUBLIC_URL + \"/\" + \"blank.png\";\r\n\r\n  down && index === originalIndex\r\n    ? (result = {\r\n        y: tile.shuffling ? 125 : curIndex * tileSpacing + y,\r\n        scale: tile.shuffling ? 1 : 1.1,\r\n        zIndex: \"1\",\r\n        shadow: 15,\r\n        immediate: n => n === \"y\" || n === \"zIndex\"\r\n      })\r\n    : (result = {\r\n        y: tile.shuffling\r\n          ? 125\r\n          : heightCalculated\r\n          ? order.indexOf(index) * tileSpacing\r\n          : 0,\r\n        scale: 1,\r\n        zIndex: \"0\",\r\n        shadow: 1,\r\n        immediate: false,\r\n        src:\r\n          order.indexOf(index) >= lastPlayerIndex || tile.shuffling\r\n            ? blankImageUrl\r\n            : imageUrl\r\n      });\r\n\r\n  return { ...{ opacity: 1, z: tile.shuffling ? randomZ : 0 }, ...result };\r\n};\r\n\r\nconst fn2 = favorTiles => index => {\r\n  return {\r\n    opacity: favorTiles[index].used ? 0 : 1,\r\n    y: 0,\r\n    x: favorTiles[index].used ? 100 : 0,\r\n    name: favorTiles[index].name\r\n  };\r\n};\r\n\r\nexport const CardList = props => {\r\n  const tiles = props.tiles;\r\n  let favorTiles = props.favorTiles;\r\n  const ordering = props.ordering; //inital ordering;\r\n  const lastPlayerIndex = props.lastPlayerIndex;\r\n  const [threatSize, setThreatSize] = useState(0);\r\n  const [threatNumberWidth, setThreatNumberWidth] = useState(0);\r\n  const [rollDisabled, setRollDisabled] = useState(false);\r\n  const [round, setRound] = useState(0);\r\n  const [heightCalculated, setHeightCalculated] = useState(false);\r\n\r\n  const [hades, setHades] = useSpring(() => ({\r\n    transform: `translate3d(0px, -${tileSpacing}px, 0)`\r\n  }));\r\n\r\n  const [hadesCounter, setHadesCounter] = useSpring(() => ({\r\n    transform: `translate3d(0px,0px,0)`\r\n  }));\r\n\r\n  const [tileSprings, setSprings] = useSprings(\r\n    tiles.length,\r\n    fn(ordering, tiles, lastPlayerIndex, heightCalculated)\r\n  ); // Create springs, each corresponds to an item, controlling its transform, scale, etc.\r\n\r\n  const [favorSprings, setFavors] = useSprings(\r\n    favorTiles.length,\r\n    fn2(favorTiles)\r\n  );\r\n\r\n  const getTileHeight = element => {\r\n    if (element) {\r\n      var height = element.getBoundingClientRect().width / ratio;\r\n\r\n      if (tileSpacing > 0) {\r\n        tileSpacing = Math.min(height, tileSpacing);\r\n      } else {\r\n        tileSpacing = height;\r\n      }\r\n\r\n      if (!heightCalculated) {\r\n        setHeightCalculated(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const bind = useGesture(({ args: [originalIndex], down, delta: [, y] }) => {\r\n    if (round <= 0) {\r\n      const curIndex = ordering.indexOf(originalIndex);\r\n      const curRow = clamp(\r\n        Math.round((curIndex * tileSpacing + y) / tileSpacing),\r\n        0,\r\n        tiles.length - 1\r\n      );\r\n      const newOrder = swap(ordering, curIndex, curRow);\r\n      setSprings(\r\n        fn(\r\n          newOrder,\r\n          tiles,\r\n          lastPlayerIndex,\r\n          heightCalculated,\r\n          down,\r\n          originalIndex,\r\n          curIndex,\r\n          y,\r\n          props.playerCount\r\n        )\r\n      ); // Feed springs new style data, they'll animate the view without causing a single render\r\n      if (!down) {\r\n        props.setOrdering(newOrder);\r\n        props.addToHistory({\r\n          cycle: props.cycleCount,\r\n          order: newOrder,\r\n          wasShuffled: true\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  const rollHades = () => {\r\n    var hadesRoll = props.rollForHades();\r\n    setHadesCounter({\r\n      transform: `translate3d(${\r\n        hadesRoll === 0\r\n          ? hadesRoll\r\n          : (hadesRoll * threatSize.width) / 9 - threatNumberWidth\r\n      }px,0px,0px)`\r\n    });\r\n\r\n    if (hadesRoll >= 9) {\r\n      setTimeout(() => {\r\n        setHades({\r\n          opacity: 1,\r\n          transform: `translate3d(0px, ${tileSpacing * (props.playerCount - 2) +\r\n            threatSize.height +\r\n            10}px,0px)`\r\n        });\r\n      }, 400);\r\n      setHadesCounter({ transform: `translate3d(0px,0px,0px)` });\r\n      props.resetHades();\r\n      props.setHadesActive();\r\n    } else {\r\n      setHades({\r\n        opacity: 0,\r\n        transform: `translate3d(0px,-${tileSpacing}px,0px)`,\r\n        zIndex: \"999\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const resetFavors = () => {\r\n    var shuffedFavorTiles = shuffle(props.defaultFavorTiles);\r\n    props.setFavorTiles(shuffedFavorTiles);\r\n    setFavors(fn2(shuffedFavorTiles));\r\n  };\r\n\r\n  const cycleFavors = () => {\r\n    const lastUnusedIndex = findLastIndex(favorTiles, searchFavorTile => {\r\n      return searchFavorTile.used === false;\r\n    });\r\n\r\n    let updatedTiles = favorTiles.map((favorTile, index) => {\r\n      return index === lastUnusedIndex\r\n        ? Object.assign({}, favorTile, { used: true })\r\n        : favorTile;\r\n    });\r\n\r\n    props.setFavorTiles(updatedTiles);\r\n    setFavors(fn2(updatedTiles));\r\n\r\n    if (lastUnusedIndex === 0 || props.hadesActive) {\r\n      resetFavors();\r\n    }\r\n  };\r\n\r\n  const normalShuffle = ordering => {\r\n    return shuffle(ordering);\r\n  };\r\n\r\n  const shuffleLastFirst = (ordering, lastRollOrder) => {\r\n    var lastGod = last(lastRollOrder);\r\n    var newOrder = shuffle(slice(ordering, 0, props.tiles.length - 1));\r\n    newOrder.unshift(lastGod);\r\n    return newOrder;\r\n  };\r\n\r\n  const shuffleTiles = () => {\r\n    setRound(round + 1);\r\n    setRollDisabled(true);\r\n    setTimeout(() => {\r\n      setRollDisabled(false);\r\n    }, 500);\r\n\r\n    props.incrementCycle();\r\n\r\n    if (props.isFavors && props.cycleCount > 0) {\r\n      cycleFavors();\r\n    }\r\n\r\n    let newOrder;\r\n    let wasShuffled;\r\n    let lastRoll = last(props.shuffleHistory);\r\n    let lastRollOrder = lastRoll.order;\r\n\r\n    if (!props.isTitans) {\r\n      if (props.playerCount === 5) {\r\n        newOrder = normalShuffle(ordering);\r\n      }\r\n\r\n      if (props.playerCount === 4 || props.playerCount === 2) {\r\n        newOrder = shuffleLastFirst(ordering, lastRollOrder);\r\n      }\r\n\r\n      if (props.playerCount === 3) {\r\n        //Last 2 gods go first\r\n        if (lastRoll.wasShuffled) {\r\n          let lastTwoGods = slice(lastRollOrder, 2, 4);\r\n          let firstTwoGods = slice(lastRollOrder, 0, 2);\r\n          newOrder = lastTwoGods.concat(firstTwoGods);\r\n          wasShuffled = false;\r\n        } else {\r\n          //Next turn: Shuffle all\r\n          newOrder = shuffle(ordering);\r\n          wasShuffled = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (props.isTitans) {\r\n      if (props.playerCount === 6) {\r\n        newOrder = normalShuffle(ordering);\r\n      }\r\n      if (props.playerCount === 5) {\r\n        newOrder = shuffleLastFirst(ordering, lastRollOrder);\r\n      }\r\n      if (props.playerCount === 4) {\r\n        //Last 2 gods go first\r\n        if (lastRoll.wasShuffled) {\r\n          var lastTwoTitansGods = slice(lastRollOrder, 3, 5);\r\n          var firstThreeGods = shuffle(slice(lastRollOrder, 0, 3));\r\n          newOrder = lastTwoTitansGods.concat(firstThreeGods);\r\n          wasShuffled = false;\r\n        } else {\r\n          //Next turn: Shuffle all\r\n          newOrder = shuffle(ordering);\r\n          wasShuffled = true;\r\n        }\r\n      }\r\n      if (props.playerCount === 3) {\r\n        //Last 3 gods shuffled random and first two placed\r\n        var lastThreeGodsShuffled = shuffle(slice(lastRollOrder, 2, 5));\r\n        var TwoFromThree = slice(lastThreeGodsShuffled, 0, 2);\r\n\r\n        var firstTwoGodsFromLastRoll = slice(lastRollOrder, 0, 2);\r\n        var missedOutGod = last(lastThreeGodsShuffled);\r\n        newOrder = TwoFromThree.concat(firstTwoGodsFromLastRoll).concat(\r\n          missedOutGod\r\n        );\r\n      }\r\n    }\r\n\r\n    props.addToHistory({\r\n      cycle: props.cycleCount,\r\n      order: newOrder,\r\n      wasShuffled: wasShuffled\r\n    });\r\n\r\n    props.setOrdering(newOrder);\r\n    animateTiles(newOrder, props.playerCount);\r\n  };\r\n\r\n  const animateTiles = useCallback(newOrder => {\r\n    tiles.forEach(tile => {\r\n      tile.shuffling = true;\r\n    });\r\n\r\n    setSprings(fn(newOrder, tiles, lastPlayerIndex, heightCalculated));\r\n\r\n    if (props.isHades) {\r\n      rollHades();\r\n    }\r\n\r\n    setTimeout(() => {\r\n      tiles.forEach(tile => {\r\n        tile.shuffling = false;\r\n      });\r\n      setSprings(fn(newOrder, tiles, lastPlayerIndex, heightCalculated));\r\n    }, 500);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (round === 0 && heightCalculated) {\r\n      setSprings(fn(props.ordering, tiles, lastPlayerIndex, heightCalculated));\r\n    }\r\n  }, [\r\n    heightCalculated,\r\n    lastPlayerIndex,\r\n    props.ordering,\r\n    round,\r\n    setSprings,\r\n    tiles\r\n  ]);\r\n\r\n  return (\r\n    <div className={`cardlist-container ${props.isHades == false ? \"add-margin\" : \"\"}` }>\r\n      <div className={\"top-container\"}>\r\n        <div className={\"active-text\"} onClick={props.back}>\r\n          Back\r\n        </div>\r\n        <div\r\n          className={`active-text ${rollDisabled ? \"disabled\" : \"\"}`}\r\n          onClick={shuffleTiles}\r\n        >\r\n          Cycle: {props.cycleCount}\r\n        </div>\r\n      </div>\r\n      {props.isHades && (\r\n        <HadesCounter\r\n          dice1={props.dice1}\r\n          dice2={props.dice2}\r\n          getThreatWidth={size => setThreatSize(size)}\r\n          getNumberWidth={size => setThreatNumberWidth(size)}\r\n          hades={hades}\r\n          hadesCounter={hadesCounter}\r\n        />\r\n      )}\r\n      <div\r\n        className={\"card-list\"}\r\n        style={{ height: tiles.length * tileSpacing }}\r\n      >\r\n        {tileSprings.map(\r\n          (\r\n            { zIndex, shadow, y, z, scale, opacity, backgroundColor, src },\r\n            i\r\n          ) => (\r\n            <animated.img\r\n              {...bind(i)}\r\n              ref={getTileHeight}\r\n              draggable=\"false\"\r\n              key={i}\r\n              src={src}\r\n              style={{\r\n                backgroundColor,\r\n                zIndex,\r\n                opacity,\r\n                boxShadow: shadow.interpolate(\r\n                  s => `rgba(0, 0, 0, 0.15) 0px ${s}px ${2 * s}px 0px`\r\n                ),\r\n                transform: interpolate(\r\n                  [y, scale, z],\r\n                  (y, s, z) =>\r\n                    `rotateZ(${z}deg) translate3d(0px,${y}px,0) scale(${s})`\r\n                )\r\n              }}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n      <div className=\"favor-container\">\r\n        {props.isFavors && !props.hadesActive && props.cycleCount > 0 && \r\n          favorSprings.map(props => (\r\n            <animated.img\r\n              className={\"favors\"}\r\n              draggable=\"false\"\r\n              src={`${process.env.PUBLIC_URL}/${props.name.value}.jpg`}\r\n              style={{\r\n                opacity: props.opacity,\r\n                transform: interpolate(\r\n                  [props.x, props.y],\r\n                  (x, y)=> `translate3d(${x}px,${y}px,0)`\r\n                )\r\n              }}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nexport class Checkbox extends React.Component {\n  render() {\n    return (\n      <label className={`checkbox-item ${this.props.className}`}>\n        {this.props.label}\n        <input\n          name={this.props.label}\n          type=\"checkbox\"\n          checked={this.props.checked}\n          onChange={this.props.onChange}\n        />\n      </label>\n    );\n  }\n}\n","import React from \"react\";\n\nexport const PlayerSelector = props => {\n  return (\n    <div className=\"player-selector\">\n      <div className={\"player-text\"}>Players:</div>\n      {props.players.map(index => (\n        <div\n          key={index}\n          className={`player-item ${\n            props.playerCount === index ? \"selected\" : \"\"\n          } ${!props.isTitans && index === 6 ? \"disabled\" : \"\"}`}\n          onClick={() => props.setPlayerCount(index)}\n        >\n          {index}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { CardList } from \"./CardList\";\nimport { Checkbox } from \"./Checkbox\";\nimport { PlayerSelector } from \"./PlayerSelector\";\nimport shuffle from \"lodash.shuffle\";\n\nconst initialGodOrdering = [0, 1, 2, 3];\nconst players = [3, 4, 5, 6];\nconst initialTitansOrdering = [0, 1, 2, 3, 4];\nconst diceValues = [0, 1, 1, 2, 2, 3];\n\nconst defaultFavorTiles = shuffle([\n  { name: \"aphrodite\", used: false },\n  { name: \"artemis\", used: false },\n  { name: \"demeter\", used: false },\n  { name: \"dionysos\", used: false },\n  { name: \"hephaistos\", used: false },\n  { name: \"hermes\", used: false },\n  { name: \"hera\", used: false },\n  { name: \"hestia\", used: false },\n]);\n\nconst defaultGodTiles = [\n  { name: \"ares\" },\n  { name: \"athena\" },\n  { name: \"zeus\" },\n  { name: \"poseidon\" }\n];\n\nconst defaultTitansTiles = [\n  { name: \"ares\" },\n  { name: \"athena\" },\n  { name: \"zeus\" },\n  { name: \"poseidon\" },\n  { name: \"kronos\" }\n];\n\nexport class AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenMode: 1,\n      isOptions: false,\n      playerCount: 5,\n      players,\n      cycleCount: 0,\n      isTitans: false,\n      isHades: false,\n      isFavors: false,\n      isHecate: false,\n      hadesActive: false,\n      hadesTotal: 0,\n      lastPlayerIndex: 4,\n      favorTiles: shuffle(defaultFavorTiles),\n      defaultFavorTiles,\n      tiles: defaultGodTiles,\n      ordering: initialGodOrdering,\n      dice1: 1,\n      dice2: 1,\n      shuffleHistory: [\n        {\n          cycle: 0,\n          order: initialGodOrdering,\n          wasShuffled: true\n        }\n      ]\n    };\n  }\n\n  componentDidMount() {\n    defaultGodTiles.forEach((picture) => {\n        const img = new Image();\n        img.src = process.env.PUBLIC_URL + \"/\" + picture + \".png\";\n    });\n\n    const img = new Image();\n    img.src = process.env.PUBLIC_URL + \"/\" + \"blank.png\";\n}\n\n  incrementCycleCount = () => {\n    this.setState({\n      cycleCount: this.state.cycleCount + 1\n    });\n  };\n\n  setPlayerCount = playerCount => {\n    var lastPlayerIndex = playerCount - 1;\n    var tilesToUse = this.state.isTitans ? defaultTitansTiles : defaultGodTiles;\n\n    this.setState({\n      playerCount,\n      lastPlayerIndex,\n      tiles: []\n    });\n\n    //hack to get highlighting working\n    setTimeout(() => {\n      this.setState({\n        tiles: tilesToUse\n      });\n    });\n  };\n\n  addToShuffleHistory = newValue => {\n    var newHistory = [...this.state.shuffleHistory, newValue];\n    this.setState({\n      shuffleHistory: newHistory\n    });\n  };\n\n  setOrdering = newOrder => {\n    this.setState({\n      ordering: newOrder\n    });\n  };\n\n  setHadesActive = () => {\n    this.setState({\n      hadesActive: true\n    });\n  };\n\n  resetHades = () => {\n    this.setState({\n      hadesTotal: 0\n    });\n  };\n\n  rollForHades = () => {\n    var diceMax = diceValues.length;\n    var dice1 = shuffle(diceValues)[Math.floor(Math.random() * diceMax)];\n    var dice2 = shuffle(diceValues)[Math.floor(Math.random() * diceMax)];\n\n    var total = this.state.hadesTotal + dice1 + dice2;\n    this.setState({\n      dice1,\n      dice2,\n      hadesTotal: total,\n      hadesActive: false\n    });\n\n    return total;\n  };\n\n  setIsFavors = isFavors => {\n    this.setState({\n      isFavors\n    });\n  };\n\n  setIsHecate = isHecate => {\n    var favorTiles = defaultFavorTiles;\n\n    if (isHecate) {\n      favorTiles = [...defaultFavorTiles, { name: \"hecate\", used: false }]\n    }\n\n    this.setState({\n      defaultFavorTiles: favorTiles,\n      favorTiles: shuffle(favorTiles),\n      isHecate,\n    });\n  };\n\n  setIsHades = isHades => {\n    this.setState({\n      isHades\n    });\n  };\n\n  setIsTitans = isTitans => {\n    var ordering = isTitans ? initialTitansOrdering : initialGodOrdering;\n\n    var newHistory = [\n      {\n        cycle: 0,\n        order: ordering,\n        wasShuffled: true\n      }\n    ];\n\n    this.setState({\n      isTitans,\n      tiles: isTitans ? defaultTitansTiles : defaultGodTiles,\n      ordering,\n      players,\n      shuffleHistory: newHistory\n    });\n  };\n\n  start = () => {\n    this.setState({\n      screenMode: 2,\n      hadesTotal: 0,\n      hadesActive: false,\n      cycleCount: 0,\n    });\n  };\n\n  back = () => {\n    this.setState({\n      screenMode: 1\n    });\n  };\n\n  options = () => {\n    this.setState({\n      screenMode: 3\n    });\n  };\n\n  onChangeHades = e => {\n    this.setIsHades(\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    );\n  };\n\n  onChangeFavors = e => {\n    this.setIsFavors(\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    );\n  };\n\n  onChangeHecate = e => {\n    this.setIsHecate(\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    );\n  };\n\n  onChangeTitans = e => {\n    this.setIsTitans(\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value\n    );\n  };\n\n  setFavorTiles = favorTiles => {\n    this.setState({\n      favorTiles\n    });\n  };\n  renderApp = () => {\n    if (this.state.screenMode === 1) {\n      return (\n        <ul className=\"start\">\n          <div className=\"img\" />\n          <li onClick={this.start}>Start</li>\n          <li onClick={this.options} className=\"btnOpt\">\n            Options\n          </li>\n        </ul>\n      );\n    } else if (this.state.screenMode === 2) {\n      return (\n        <CardList\n          ordering={this.state.ordering}\n          setOrdering={this.setOrdering}\n          addToHistory={this.addToShuffleHistory}\n          incrementCycle={this.incrementCycleCount}\n          rollForHades={this.rollForHades}\n          setHadesActive={this.setHadesActive}\n          resetHades={this.resetHades}\n          back={this.back}\n          lastPlayerIndex={this.state.lastPlayerIndex}\n          cycleCount={this.state.cycleCount}\n          tiles={this.state.tiles}\n          isTitans={this.state.isTitans}\n          isHades={this.state.isHades}\n          isFavors={this.state.isFavors}\n          shuffleHistory={this.state.shuffleHistory}\n          playerCount={this.state.playerCount}\n          hadesActive={this.state.hadesActive}\n          setFavorTiles={this.setFavorTiles}\n          favorTiles={this.state.favorTiles}\n          defaultFavorTiles={this.state.defaultFavorTiles}\n          dice1={this.state.dice1}\n          dice2={this.state.dice2}\n        />\n      );\n    } else if (this.state.screenMode === 3) {\n      return (\n        <div className=\"options\">\n          <div className={\"active-text\"} onClick={this.back}>\n            back\n          </div>\n          <PlayerSelector\n            isTitans={this.state.isTitans}\n            players={this.state.players}\n            playerCount={this.state.playerCount}\n            setPlayerCount={this.setPlayerCount}\n          />\n          <div className={\"checkbox-container\"}>\n            <Checkbox\n              label=\"Titans\"\n              checked={this.state.isTitans}\n              onChange={this.onChangeTitans}\n            />\n            <Checkbox\n              label=\"Hades\"\n              checked={this.state.isHades}\n              onChange={this.onChangeHades}\n            />\n            <Checkbox\n              label=\"Favors\"\n              checked={this.state.isFavors}\n              onChange={this.onChangeFavors}\n            />\n            <Checkbox\n              label=\"Hecate\"\n              checked={this.state.isHecate}\n              onChange={this.onChangeHecate}\n              className={!this.state.isFavors && \"disabled\"}\n            />\n          </div>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return <div className=\"app-container\">{this.renderApp()}</div>;\n  }\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { AppContainer } from \"./Components/AppContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AppContainer />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}